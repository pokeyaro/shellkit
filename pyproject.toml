# Build system configuration
[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

# Project metadata
[project]
name = "ShellKit"
version = "0.1.0-beta7"
authors = [{ name = "Pokeya" }]
description = "A teaching-oriented simulation of system call formatting in Python"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
license-files = ["LICENSE"]
keywords = [
    "shell",
    "libc",
    "syscall",
]
dependencies = [
    'tomli; python_version < "3.11"'  # TOML parsing for Python < 3.11
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: System :: Shells",
]

# Optional dependencies for development
[project.optional-dependencies]
dev = [
    "black",    # Code formatter
    "isort",    # Import sorter
    "ruff",     # Fast linter
    "mypy",     # Type checker
    "pytest",   # Test framework
    "build",    # Package builder
    "twine",    # PyPI uploader
    "tomli",    # TOML parsing (always install for dev)
    "types-setuptools",  # Type stubs for setuptools
]

# Entry points
[project.scripts]
pysh = "shellkit.shell.main:main"

# Package discovery
[tool.setuptools.packages.find]
where = ["."]
include = ["shellkit*"]

# Package data (non-Python files to include)
[tool.setuptools.package-data]
"shellkit.syscall" = ["syslib.so"]                    # Compiled syscall library
"shellkit.i18n.lang" = ["*.json"]                     # Translation files
"shellkit.shell.environs" = ["template.json"]         # Environment templates
"shellkit.shell.docs.manuals.en" = ["*.md"]           # English documentation
"shellkit.shell.docs.manuals.ja" = ["*.md"]           # Japanese documentation
"shellkit.shell.docs.manuals.ko" = ["*.md"]           # Korean documentation
"shellkit.shell.docs.manuals.zh" = ["*.md"]           # Chinese documentation

# Development tools configuration
[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100
force_sort_within_sections = true
force_alphabetical_sort = true
case_sensitive = true
skip_glob = ["*/__init__.py"]

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = ["build", ".venv", "__pycache__"]
fix = false

[tool.mypy]
python_version = "3.10"
strict = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--verbose"
