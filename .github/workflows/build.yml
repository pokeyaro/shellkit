name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on any version tag like v1.0.0
  workflow_dispatch:  # Allow manual workflow trigger

jobs:
  # ───────────────────────────────────────────────────────────────
  # Linux x86_64
  build-linux-x86_64:
    runs-on: ubuntu-latest
    name: Build Linux x86_64 wheels
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_ARCHS: "x86_64"
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-x86_64
          path: wheelhouse/*.whl

  # ───────────────────────────────────────────────────────────────
  # Linux aarch64
  build-linux-aarch64:
    runs-on: ubuntu-latest
    name: Build Linux aarch64 wheels
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_ARCHS: "aarch64"
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-aarch64
          path: wheelhouse/*.whl

  # ───────────────────────────────────────────────────────────────
  # macOS arm64 (Apple Silicon)
  build-macos-arm64:
    runs-on: macos-latest
    name: Build macOS arm64 wheels
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_ARCHS: "arm64"
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-arm64
          path: wheelhouse/*.whl

  # ───────────────────────────────────────────────────────────────
  # macOS x86_64 (Intel)
  build-macos-x86_64:
    runs-on: macos-13
    name: Build macOS x86_64 wheels
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_ARCHS: "x86_64"
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-x86_64
          path: wheelhouse/*.whl

  # ───────────────────────────────────────────────────────────────
  # TestPyPI Release: For pre-release versions (e.g., alpha, beta, rc).
  test-publish:
    name: Publish to TestPyPI
    needs: [build-linux-x86_64, build-linux-aarch64, build-macos-arm64, build-macos-x86_64]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-')  # Alpha: v1.0.0-alpha1 / Beta: v1.0.0-beta1 / Release Candidate: v1.0.0-rc1

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

  # ───────────────────────────────────────────────────────────────
  # PyPI Release: For stable versions (no alpha/beta suffixes).
  publish:
    name: Publish to PyPI
    needs: [build-linux-x86_64, build-linux-aarch64, build-macos-arm64, build-macos-x86_64]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-')  # Release: v1.0.0, v2.1.3 etc.

    environment:
      name: release
      url: https://pypi.org/project/shellkit/

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  # ───────────────────────────────────────────────────────────────
  # Summarize built wheels
  summarize-wheels:
    name: Check wheel count
    runs-on: ubuntu-latest
    needs: [build-linux-x86_64, build-linux-aarch64, build-macos-arm64, build-macos-x86_64]
    if: always()

    steps:
      - name: Download all built wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      - name: List built wheels
        run: ls -lh dist/*.whl || echo "No wheels found."

      - name: Count wheels
        run: echo "✅ Built $(ls dist/*.whl | wc -l) wheels total."
